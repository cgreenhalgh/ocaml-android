--- asmrun/signals_osdep.h~
+++ asmrun/signals_osdep.h
@@ -63,7 +63,18 @@
 
 #elif defined(TARGET_arm) && (defined(SYS_linux_eabi) || defined(SYS_linux_eabihf))
 
-  #include <sys/ucontext.h>
+  #if defined(__ANDROID__)
+    // The Android NDK does not have sys/ucontext.h yet.
+    typedef struct ucontext {
+      uint32_t uc_flags;
+      struct ucontext *uc_link;
+      stack_t uc_stack;
+      struct sigcontext uc_mcontext;
+      // Other fields omitted...
+    } ucontext_t;
+  #else
+    #include <sys/ucontext.h>
+  #endif
 
   #define DECLARE_SIGNAL_HANDLER(name) \
     static void name(int sig, siginfo_t * info, ucontext_t * context)
--- otherlibs/unix/getpw.c~
+++ otherlibs/unix/getpw.c
@@ -29,7 +29,7 @@
   Begin_roots5 (name, passwd, gecos, dir, shell);
     name = copy_string(entry->pw_name);
     passwd = copy_string(entry->pw_passwd);
-#ifndef __BEOS__
+#if !defined(__BEOS__) && !defined(__ANDROID__)
     gecos = copy_string(entry->pw_gecos);
 #else
     gecos = copy_string("");
--- otherlibs/unix/termios.c~
+++ otherlibs/unix/termios.c
@@ -265,11 +265,16 @@
   return Val_unit;
 }
 
+#if defined(__ANDROID__)
+CAMLprim value unix_tcdrain(value fd)
+{ invalid_argument("tcdrain not implemented"); }
+#else
 CAMLprim value unix_tcdrain(value fd)
 {
   if (tcdrain(Int_val(fd)) == -1) uerror("tcdrain", Nothing);
   return Val_unit;
 }
+#endif
 
 static int queue_flag_table[] = {
   TCIFLUSH, TCOFLUSH, TCIOFLUSH
